/**
    @filename   :   epd4in2b-demo.ino
    @brief      :   4.2inch e-paper display (B) demo
    @author     :   Yehui from Waveshare

    Copyright (C) Waveshare     August 22 2017

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documnetation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to  whom the Software is
   furished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS OR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   THE SOFTWARE.
*/


#include <SPI.h>
#include "epd4in2b.h"
#include "imagedata.h"
#include "epdpaint.h"

#define COLORED     0
#define UNCOLORED   1

int incomingByte;      // a variable to read incoming serial data into

unsigned char image[1500];
Epd epd;
Paint paint(image, 400, 28);    //width should be the multiple of 8

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial.println("wir starten");

  if (epd.Init() != 0) {
    Serial.print("e-Paper init failed");
    return;
  }

  //epd.Reset();
  //epd.ClearFrame();
  //epd.DisplayFrame();
  //Serial.println("Cleared frame ...");


  /**
      Due to RAM not enough in Arduino UNO, a frame buffer is not allowed.
      In this case, a smaller image buffer is allocated and you have to
      update a partial display several times.
      1 byte = 8 pixels, therefore you have to set 8*N pixels at a time.
  */

  //  Serial.println("Hier");
  //
  //  paint.Clear(COLORED);
  //  paint.Clear(UNCOLORED);
  //  Serial.println("cleared durchlaufen");
  //  paint.DrawCircle(14, 14, 14, COLORED);
  //  epd.SetPartialWindowBlack(paint.GetImage(), 100, 150, paint.GetWidth(), paint.GetHeight());
  //  epd.DisplayFrame();

  /* This displays the data from the SRAM in e-Paper module */


  /* This displays an image */
  /*
    Serial.println("Es müsste hier eigentlich ein Text erscheinen");
    paint.DrawStringAt(10, 10, "Useless Box", &Font20, COLORED);
    epd.SetPartialWindowRed(paint.GetImage(), 0, 0, paint.GetWidth(), paint.GetHeight());
    epd.DisplayFrame();
    Serial.println("fertig :)");
  */
  /* Deep sleep */
  //epd.Sleep();
  Serial.println("done");
}

void loop() {
  // 
  if (Serial.available() > 0) {
    // read the oldest byte in the serial buffer:
    incomingByte = Serial.read();
    
    // Zum saubermachen des Displays, anschließend den letzten Befehl drücken
    if (incomingByte == 'C') {
      epd.ClearFrame();
      Serial.println("Cleared frame ...");
    }
    
    // Malt einen größeren schwarzen Kreis
    if (incomingByte == '1') {
      Serial.println("paint.Clear");
      paint.Clear(COLORED);
      Serial.println("paint.Clear2");
      paint.Clear(UNCOLORED);
      Serial.println("cleared durchlaufen");
      paint.DrawCircle(14, 14, 14, COLORED);
      Serial.println("Draw Circle");
      epd.SetPartialWindowBlack(paint.GetImage(), 100, 150, paint.GetWidth(), paint.GetHeight());
      Serial.println("SetPartialWindowBlack");
    }
    
    // Malt einen kleinen Roten Kreis
    if (incomingByte == '2') {
      Serial.println("paint.Clear");
      paint.Clear(COLORED);
      Serial.println("paint.Clear2");
      paint.Clear(UNCOLORED);
      Serial.println("cleared durchlaufen");
      paint.DrawCircle(8, 8, 8, COLORED);
      Serial.println("Draw Circle");
      epd.SetPartialWindowRed(paint.GetImage(), 10, 100, paint.GetWidth(), paint.GetHeight());
      Serial.println("SetPartialWindowBlack");
    }
    
    // Diese Zeile muss nach jedem der oberen Befehlen ausgeführt werden damit auf dem Display irgendwas angezeigt wird
    if (incomingByte == 'ok') {
      epd.DisplayFrame();
      Serial.println("show on display");
    }

    // Testrun um 
    
  }

}
